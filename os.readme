#include <stdio.h>
#define MAX 10

int main() {
    int n, i, remain=0, time=0, min, shortest, finish_time, bt[MAX], at[MAX], rt[MAX], wt[MAX], tat[MAX];
    float avg_wt=0, avg_tat=0;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i+1);
        scanf("%d%d", &at[i], &bt[i]);
        rt[i] = bt[i]; // remaining time
    }

    remain = n;
    while (remain != 0) {
        min = 9999;
        shortest = -1;
        for (i = 0; i < n; i++) {
            if (at[i] <= time && rt[i] > 0 && rt[i] < min) {
                min = rt[i];
                shortest = i;
            }
        }
        if (shortest == -1) {
            time++;
            continue;
        }
        rt[shortest]--;
        if (rt[shortest] == 0) {
            remain--;
            finish_time = time + 1;
            tat[shortest] = finish_time - at[shortest];
            wt[shortest] = tat[shortest] - bt[shortest];
            avg_wt += wt[shortest];
            avg_tat += tat[shortest];
        }
        time++;
    }

    printf("Process\tArrival\tBurst\tWaiting\tTurnaround\n");
    for (i = 0; i < n; i++)
        printf("%d\t%d\t%d\t%d\t%d\n", i+1, at[i], bt[i], wt[i], tat[i]);
    printf("Average Waiting Time: %.2f\n", avg_wt/n);
    printf("Average Turnaround Time: %.2f\n", avg_tat/n);

    return 0;
}
